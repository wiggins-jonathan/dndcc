default:
  image: golang:1.18

variables:
  PACKAGE_REGISTRY: $CI_API_V4_URL/projects/$CI_PROJECT_ID/packages/generic/$CI_PROJECT_NAME/$CI_COMMIT_TAG

stages:
  - go-fmt
  - build
  - upload
  - release

go-fmt:
  stage: go-fmt
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)

build:
  stage: build
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - go mod download
    - go build -race -ldflags "-X ${CI_PROJECT_PATH}/cmd.Version=${CI_COMMIT_TAG}" -o $CI_PROJECT_NAME
  artifacts:
    paths:
      - $CI_PROJECT_NAME

upload:
  stage: upload
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file $CI_PROJECT_NAME $PACKAGE_REGISTRY/$CI_PROJECT_NAME

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script: [echo "Creating release"]
  release:
    tag_name: $CI_COMMIT_TAG
    description: "${CI_PROJECT_NAME}-${CI_COMMIT_TAG}"
    ref: $CI_COMMIT_SHA
    assets:
      links:
        - name: $CI_PROJECT_NAME
          url: $PACKAGE_REGISTRY/$CI_PROJECT_NAME
